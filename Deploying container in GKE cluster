Part - 1:
=======
Create a sample website using docker container

docker run -p 8080:80 nginx:latest
Docker ps -a
docker cp index.html [container-id]:/usr/share/nginx/html/
docker commit [container-id] cad/web:version1
docker tag cad/web:version1 us.gcr.io/youtube-demo-255723/cad-site:version1
docker push us.gcr.io/youtube-demo-255723/cad-site:version1

PART - 2
=======
Deploying container in GKE cluster

 gcloud config set project youtube-demo-255723
 gcloud config set compute/zone australia-southeast1

Creating a GKE cluster

 gcloud container clusters create gk-cluster --num-nodes=1
 gcloud container clusters get-credentials gk-cluster
  This command configures kubectl to use the cluster you created.

Deploying an application to the cluster
 kubectl create deployment webserver --image=us.gcr.io/youtube-demo-255723/cad-site:version1

Exposing the Deployment
 kubectl expose deployment webserver --type LoadBalancer --port 80 --target-port 80

Inspecting and viewing the application
 1. Inspect the running Pods by using
             kubectl get pods
 2. Inspect the hello-server Service by using 
             kubectl get service


-------------------------------------------------------------------


gcloud container clusters create my-cluster --num-nodes 1 --zone us-central1-a

gcloud container clusters get-credentials my-cluster

cat .kube/config

kubectl cluster-info

kubectl top nodes

kubectl run nginx-1 --image nginx:latest

kubectl get pods

kubectl describe pod nginx-1

gcloud container clusters delete my-cluster

-----------------------------------
